openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
  description: Generated server url
tags:
- name: Session
  description: Session management API
- name: Workspace-Task Integration
  description: Integrated workspace and task management API
- name: Session Detail
  description: Session detail management API
- name: Custom Templates
  description: Custom workspace template management API
- name: Document
  description: Document management API
- name: Template
  description: Coder template management API
- name: Repository Management
  description: リポジトリ管理API
- name: Default Templates
  description: Default workspace template management API
- name: Authentication
  description: Authentication API (Disabled)
- name: Task
  description: Task management API
paths:
  /api/v1/workspaces/{id}/status:
    put:
      tags:
      - workspace-controller
      operationId: updateWorkspaceStatus
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WorkspaceResponse'
  /api/v1/workspaces/templates/{id}:
    get:
      tags:
      - workspace-controller
      operationId: getWorkspaceTemplate
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WorkspaceTemplateResponse'
    put:
      tags:
      - workspace-controller
      operationId: updateWorkspaceTemplate
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWorkspaceTemplateRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WorkspaceTemplateResponse'
    delete:
      tags:
      - workspace-controller
      operationId: deleteWorkspaceTemplate
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/templates/{id}:
    get:
      tags:
      - Template
      summary: Get template by ID
      description: Retrieves a specific template by its ID
      operationId: getTemplateById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Template'
    put:
      tags:
      - Template
      summary: Update template
      description: Updates an existing template
      operationId: updateTemplate
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTemplateRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Template'
    delete:
      tags:
      - Template
      summary: Delete template
      description: Deletes a template by its ID
      operationId: deleteTemplate
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/templates/default/{templateId}/set-default:
    put:
      tags:
      - Default Templates
      summary: Set template as default
      description: Set a specific template as the default template
      operationId: setAsDefaultTemplate
      parameters:
      - name: templateId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WorkspaceTemplateResponse'
  /api/v1/templates/custom/{templateId}:
    get:
      tags:
      - Custom Templates
      summary: Get template by ID
      description: Retrieve a specific template by its ID
      operationId: getTemplateById_1
      parameters:
      - name: templateId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WorkspaceTemplateResponse'
    put:
      tags:
      - Custom Templates
      summary: Update custom template
      description: Update an existing custom workspace template
      operationId: updateCustomTemplate
      parameters:
      - name: templateId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCustomTemplateRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WorkspaceTemplateResponse'
    delete:
      tags:
      - Custom Templates
      summary: Delete custom template
      description: Delete a custom workspace template
      operationId: deleteCustomTemplate
      parameters:
      - name: templateId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
  /api/v1/templates/content:
    get:
      tags:
      - Template
      summary: Get template content by path
      description: Retrieves template content by file path
      operationId: getTemplateContent
      parameters:
      - name: path
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TemplateContentResponse'
    put:
      tags:
      - Template
      summary: Update template content by path
      description: Updates template content by file path
      operationId: updateTemplateContent
      parameters:
      - name: path
        in: query
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTemplateContentRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UpdateTemplateContentResponse'
  /api/v1/tasks/{id}:
    get:
      tags:
      - Task
      summary: Get task by ID
      description: Retrieves a specific task by its ID
      operationId: getTaskById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TaskResponse'
    put:
      tags:
      - Task
      summary: Update task
      description: Updates an existing task
      operationId: updateTask
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTaskRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TaskResponse'
    delete:
      tags:
      - Task
      summary: Delete task
      description: Deletes a specific task
      operationId: deleteTask
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/tasks/{id}/status:
    put:
      tags:
      - Task
      summary: Update task status
      description: Updates the status of a specific task
      operationId: updateTaskStatus
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TaskResponse'
  /api/v1/sessions/{id}:
    get:
      tags:
      - Session
      summary: Get session by ID
      description: Retrieves a specific session by its ID
      operationId: getSessionById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SessionResponse'
    put:
      tags:
      - Session
      summary: Update session
      description: Updates an existing session (status changes are not allowed)
      operationId: updateSession
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSessionRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SessionResponse'
    delete:
      tags:
      - Session
      summary: Delete session
      description: Deletes a specific session
      operationId: deleteSession
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/sessions/{id}/status:
    put:
      tags:
      - Session
      summary: Update session status
      description: Internal API - Status updates are managed by the system
      operationId: updateSessionStatus
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
  /api/v1/repositories/{id}:
    get:
      tags:
      - Repository Management
      summary: リポジトリ詳細取得
      description: 指定されたIDのリポジトリ詳細を取得します
      operationId: getRepositoryById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RepositoryDetailResponse'
    put:
      tags:
      - Repository Management
      summary: リポジトリ更新
      description: 既存のリポジトリを更新します
      operationId: updateRepository
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRepositoryRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RepositoryResponse'
    delete:
      tags:
      - Repository Management
      summary: リポジトリ削除
      description: 指定されたIDのリポジトリを削除します
      operationId: deleteRepository
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
  /api/v1/documents/{id}:
    get:
      tags:
      - Document
      summary: Get document by ID
      description: Retrieves a specific document by its ID
      operationId: getDocumentById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Document'
    put:
      tags:
      - Document
      summary: Update document
      description: Updates an existing document
      operationId: updateDocument
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Document'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Document'
    delete:
      tags:
      - Document
      summary: Delete document
      description: Deletes a document by its ID
      operationId: deleteDocument
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/agents/{id}:
    get:
      tags:
      - agent-controller
      operationId: getAgentById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AgentResponse'
    put:
      tags:
      - agent-controller
      operationId: updateAgent
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAgentRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AgentResponse'
    delete:
      tags:
      - agent-controller
      operationId: deregisterAgent
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
  /api/v1/agents/{id}/status:
    put:
      tags:
      - agent-controller
      operationId: updateAgentStatus
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAgentStatusRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AgentResponse'
  /api/v1/workspaces:
    get:
      tags:
      - workspace-controller
      operationId: getWorkspaces
      parameters:
      - name: sessionId
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkspaceResponse'
    post:
      tags:
      - workspace-controller
      operationId: createWorkspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWorkspaceRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WorkspaceResponse'
  /api/v1/workspaces/{workspaceId}/monitoring/stop:
    post:
      tags:
      - workspace-monitoring-controller
      operationId: stopMonitoring
      parameters:
      - name: workspaceId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
  /api/v1/workspaces/{workspaceId}/monitoring/start:
    post:
      tags:
      - workspace-monitoring-controller
      operationId: startMonitoring
      parameters:
      - name: workspaceId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
  /api/v1/workspaces/{id}/stop:
    post:
      tags:
      - workspace-controller
      operationId: stopWorkspace
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WorkspaceResponse'
  /api/v1/workspaces/{id}/start:
    post:
      tags:
      - workspace-controller
      operationId: startWorkspace
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WorkspaceResponse'
  /api/v1/workspaces/templates:
    get:
      tags:
      - workspace-controller
      operationId: getWorkspaceTemplates
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkspaceTemplateResponse'
    post:
      tags:
      - workspace-controller
      operationId: createWorkspaceTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWorkspaceTemplateRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WorkspaceTemplateResponse'
  /api/v1/templates:
    get:
      tags:
      - Template
      summary: Get all templates
      description: Retrieves a list of all Terraform templates
      operationId: getAllTemplates
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Template'
    post:
      tags:
      - Template
      summary: Create a new template
      description: Creates a new Terraform template
      operationId: createTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTemplateRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Template'
  /api/v1/templates/{id}/validate:
    post:
      tags:
      - Template
      summary: Validate template
      description: Validates the Terraform syntax of a template
      operationId: validateTemplate
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidateTemplateRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ValidateTemplateResponse'
  /api/v1/templates/{id}/deploy:
    post:
      tags:
      - Template
      summary: Deploy template to Coder
      description: Deploys the template to Coder server
      operationId: deployToCoder
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
  /api/v1/templates/default/validate/{templateId}:
    post:
      tags:
      - Default Templates
      summary: Validate template parameters
      description: Validate the parameters of a specific template
      operationId: validateTemplate_1
      parameters:
      - name: templateId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
  /api/v1/templates/default/validate-parameter:
    post:
      tags:
      - Default Templates
      summary: Validate parameter value
      description: Validate a parameter value against its template definition
      operationId: validateParameterValue
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidateParameterRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
  /api/v1/templates/default/update-configuration:
    post:
      tags:
      - Default Templates
      summary: Update default template configuration
      description: Update and validate default template configuration
      operationId: updateDefaultTemplateConfiguration
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
  /api/v1/templates/default/reset-basic:
    post:
      tags:
      - Default Templates
      summary: Reset to basic default
      description: Reset to basic default template configuration
      operationId: resetToBasicDefault
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WorkspaceTemplateResponse'
  /api/v1/templates/default/initialize:
    post:
      tags:
      - Default Templates
      summary: Initialize default templates
      description: Initialize default workspace templates if they don't exist
      operationId: initializeDefaultTemplates
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
  /api/v1/templates/custom:
    get:
      tags:
      - Custom Templates
      summary: Get custom templates
      description: Retrieve all custom workspace templates
      operationId: getCustomTemplates
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkspaceTemplateResponse'
    post:
      tags:
      - Custom Templates
      summary: Create custom template
      description: Create a new custom workspace template
      operationId: createCustomTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCustomTemplateRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WorkspaceTemplateResponse'
  /api/v1/templates/custom/{templateId}/clone:
    post:
      tags:
      - Custom Templates
      summary: Clone template
      description: Create a new template by cloning an existing one
      operationId: cloneTemplate
      parameters:
      - name: templateId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloneTemplateRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WorkspaceTemplateResponse'
  /api/v1/templates/custom/import:
    post:
      tags:
      - Custom Templates
      summary: Import template
      description: Import template configuration from JSON
      operationId: importTemplate
      parameters:
      - name: overwriteExisting
        in: query
        required: false
        schema:
          type: boolean
          default: false
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WorkspaceTemplateResponse'
  /api/v1/tasks:
    get:
      tags:
      - Task
      summary: Get all tasks
      description: Retrieves all tasks in the system
      operationId: getAllTasks
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaskResponse'
    post:
      tags:
      - Task
      summary: Create a new task
      description: Creates a new task in the system
      operationId: createTask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTaskRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TaskResponse'
  /api/v1/tasks/{id}/start:
    post:
      tags:
      - Task
      summary: Start task
      description: Starts a specific task
      operationId: startTask
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TaskResponse'
  /api/v1/tasks/{id}/retry:
    post:
      tags:
      - Task
      summary: Retry task
      description: Retries a specific task
      operationId: retryTask
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TaskResponse'
  /api/v1/tasks/{id}/logs:
    post:
      tags:
      - Task
      summary: Add log to task
      description: Adds a log message to a specific task
      operationId: addLogToTask
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TaskResponse'
  /api/v1/tasks/{id}/fail:
    post:
      tags:
      - Task
      summary: Fail task
      description: Marks a specific task as failed
      operationId: failTask
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TaskResponse'
  /api/v1/tasks/{id}/complete:
    post:
      tags:
      - Task
      summary: Complete task
      description: Marks a specific task as completed
      operationId: completeTask
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TaskResponse'
  /api/v1/tasks/{id}/cancel:
    post:
      tags:
      - Task
      summary: Cancel task
      description: Cancels a specific task
      operationId: cancelTask
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TaskResponse'
  /api/v1/tasks/{id}/artifacts:
    post:
      tags:
      - Task
      summary: Add artifact to task
      description: Adds an artifact to a specific task
      operationId: addArtifactToTask
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TaskResponse'
  /api/v1/sessions:
    get:
      tags:
      - Session
      summary: Get all sessions
      description: Retrieves all sessions in the system
      operationId: getAllSessions
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SessionResponse'
    post:
      tags:
      - Session
      summary: Create a new session
      description: Creates a new session in the system
      operationId: createSession
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSessionRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SessionResponse'
  /api/v1/sessions/{id}/tags:
    post:
      tags:
      - Session
      summary: Add tag to session
      description: Adds a tag to a specific session
      operationId: addTagToSession
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SessionResponse'
  /api/v1/sessions/{id}/sync-status:
    post:
      tags:
      - Session
      summary: Sync session status
      description: Synchronizes session status with workspace states
      operationId: syncSessionStatus
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SessionResponse'
  /api/v1/sessions/{id}/monitor-workspaces:
    post:
      tags:
      - Session
      summary: Monitor session workspaces
      description: "Stub: Workspace monitoring moved to keruta-executor"
      operationId: monitorSessionWorkspaces
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/sessions/realtime/test/{sessionId}:
    post:
      tags:
      - session-realtime-controller
      operationId: sendTestBroadcast
      parameters:
      - name: sessionId
        in: path
        required: true
        schema:
          type: string
      - name: message
        in: query
        required: false
        schema:
          type: string
          default: test
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
  /api/v1/repositories:
    get:
      tags:
      - Repository Management
      summary: リポジトリ一覧取得
      description: 全てのリポジトリの一覧を取得します
      operationId: getAllRepositories
      parameters:
      - name: search
        in: query
        required: false
        schema:
          type: string
      - name: activeOnly
        in: query
        required: false
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RepositoryResponse'
    post:
      tags:
      - Repository Management
      summary: リポジトリ作成
      description: 新しいリポジトリを作成します
      operationId: createRepository
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRepositoryRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RepositoryResponse'
  /api/v1/repositories/{id}/toggle-status:
    post:
      tags:
      - Repository Management
      summary: リポジトリ状態切り替え
      description: リポジトリのアクティブ/非アクティブ状態を切り替えます
      operationId: toggleRepositoryStatus
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RepositoryResponse'
  /api/v1/repositories/{id}/test-script:
    post:
      tags:
      - Repository Management
      summary: インストールスクリプトテスト
      description: インストールスクリプトのテスト実行を行います
      operationId: testInstallScript
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RepositoryOperationResponse'
  /api/v1/repositories/{id}/test-connection:
    post:
      tags:
      - Repository Management
      summary: リポジトリ接続テスト
      description: リポジトリへの接続をテストします
      operationId: testRepositoryConnection
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RepositoryOperationResponse'
  /api/v1/repositories/{id}/clone:
    post:
      tags:
      - Repository Management
      summary: リポジトリクローン
      description: リポジトリをクローンします
      operationId: cloneRepository
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloneRepositoryRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RepositoryOperationResponse'
  /api/v1/repositories/generate-script:
    post:
      tags:
      - Repository Management
      summary: インストールスクリプト生成
      description: テンプレートからインストールスクリプトを生成します
      operationId: generateInstallScript
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateScriptRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
  /api/v1/integration/tasks/{taskId}/execute:
    post:
      tags:
      - Workspace-Task Integration
      summary: Execute task in workspace
      description: "Executes a task within its associated workspace, ensuring workspace\
        \ is ready"
      operationId: executeTaskInWorkspace
      parameters:
      - name: taskId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
  /api/v1/documents:
    get:
      tags:
      - Document
      summary: Get all documents
      description: Retrieves a list of all documents
      operationId: getAllDocuments
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document'
    post:
      tags:
      - Document
      summary: Create a document
      description: Creates a new document
      operationId: createDocument
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Document'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Document'
  /api/v1/auth/refresh:
    post:
      tags:
      - Authentication
      summary: Refresh token (Disabled)
      description: "Authentication has been disabled, returns dummy tokens"
      operationId: refresh
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshTokenRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TokenResponse'
  /api/v1/auth/login:
    post:
      tags:
      - Authentication
      summary: Login (Disabled)
      description: "Authentication has been disabled, returns dummy tokens"
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TokenResponse'
  /api/v1/agents/{id}/unassign-task:
    post:
      tags:
      - agent-controller
      operationId: unassignTask
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AgentResponse'
  /api/v1/agents/{id}/stop:
    post:
      tags:
      - agent-controller
      operationId: stopAgent
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
  /api/v1/agents/{id}/restart:
    post:
      tags:
      - agent-controller
      operationId: restartAgent
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
  /api/v1/agents/{id}/heartbeat:
    post:
      tags:
      - agent-controller
      operationId: processHeartbeat
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentHeartbeatRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AgentResponse'
  /api/v1/agents/{id}/health-check:
    post:
      tags:
      - agent-controller
      operationId: performHealthCheck
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AgentHealthCheckResponse'
  /api/v1/agents/{id}/execute:
    post:
      tags:
      - agent-controller
      operationId: executeCommand
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExecuteAgentCommandRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AgentCommandResultResponse'
  /api/v1/agents/{id}/assign-task:
    post:
      tags:
      - agent-controller
      operationId: assignTask
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: taskId
        in: query
        required: true
        schema:
          type: string
      - name: workspaceId
        in: query
        required: true
        schema:
          type: string
      - name: sessionId
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AgentResponse'
  /api/v1/agents/register:
    post:
      tags:
      - agent-controller
      operationId: registerAgent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterAgentRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AgentResponse'
  /api/v1/agents/cleanup-stale:
    post:
      tags:
      - agent-controller
      operationId: cleanupStaleAgents
      parameters:
      - name: staleThresholdMinutes
        in: query
        required: false
        schema:
          type: integer
          format: int64
          default: 10
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AgentResponse'
  /api/v1/workspaces/{workspaceId}/resources:
    get:
      tags:
      - workspace-log-controller
      operationId: getWorkspaceResourceUsage
      parameters:
      - name: workspaceId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
  /api/v1/workspaces/{workspaceId}/monitoring/overview:
    get:
      tags:
      - workspace-monitoring-controller
      operationId: getMonitoringOverview
      parameters:
      - name: workspaceId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
  /api/v1/workspaces/{workspaceId}/metrics/history:
    get:
      tags:
      - workspace-monitoring-controller
      operationId: getHistoricalMetrics
      parameters:
      - name: workspaceId
        in: path
        required: true
        schema:
          type: string
      - name: hours
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 24
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
  /api/v1/workspaces/{workspaceId}/logs:
    get:
      tags:
      - workspace-log-controller
      operationId: getWorkspaceLogs
      parameters:
      - name: workspaceId
        in: path
        required: true
        schema:
          type: string
      - name: lines
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 100
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
  /api/v1/workspaces/{workspaceId}/logs/stream:
    get:
      tags:
      - workspace-log-controller
      operationId: streamWorkspaceLogs
      parameters:
      - name: workspaceId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            text/event-stream:
              schema:
                $ref: '#/components/schemas/SseEmitter'
  /api/v1/workspaces/{workspaceId}/insights:
    get:
      tags:
      - workspace-monitoring-controller
      operationId: getPerformanceInsights
      parameters:
      - name: workspaceId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
  /api/v1/workspaces/{workspaceId}/health:
    get:
      tags:
      - workspace-monitoring-controller
      operationId: getWorkspaceHealth
      parameters:
      - name: workspaceId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
  /api/v1/workspaces/{workspaceId}/events:
    get:
      tags:
      - workspace-log-controller
      operationId: getWorkspaceEvents
      parameters:
      - name: workspaceId
        in: path
        required: true
        schema:
          type: string
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
  /api/v1/workspaces/{workspaceId}/dashboard:
    get:
      tags:
      - workspace-log-controller
      operationId: getWorkspaceDashboard
      parameters:
      - name: workspaceId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
  /api/v1/workspaces/{workspaceId}/builds/{buildId}/logs:
    get:
      tags:
      - workspace-log-controller
      operationId: getWorkspaceBuildLogs
      parameters:
      - name: workspaceId
        in: path
        required: true
        schema:
          type: string
      - name: buildId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
  /api/v1/workspaces/{workspaceId}/builds/latest/logs:
    get:
      tags:
      - workspace-log-controller
      operationId: getLatestWorkspaceBuildLogs
      parameters:
      - name: workspaceId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
  /api/v1/workspaces/{id}:
    get:
      tags:
      - workspace-controller
      operationId: getWorkspace
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WorkspaceResponse'
    delete:
      tags:
      - workspace-controller
      operationId: deleteWorkspace
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/workspaces/session/{sessionId}:
    get:
      tags:
      - workspace-controller
      operationId: getWorkspaceBySessionId
      parameters:
      - name: sessionId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WorkspaceResponse'
  /api/v1/workspaces/monitoring/status:
    get:
      tags:
      - workspace-monitoring-controller
      operationId: getMonitoringStatus
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
  /api/v1/templates/default:
    get:
      tags:
      - Default Templates
      summary: Get default templates
      description: Retrieve all default workspace templates
      operationId: getDefaultTemplates
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkspaceTemplateResponse'
  /api/v1/templates/default/health:
    get:
      tags:
      - Default Templates
      summary: Default template health check
      description: Health check for default template management
      operationId: healthCheck
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
  /api/v1/templates/custom/{templateId}/export:
    get:
      tags:
      - Custom Templates
      summary: Export template
      description: Export template configuration as JSON
      operationId: exportTemplate
      parameters:
      - name: templateId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
  /api/v1/templates/custom/stats:
    get:
      tags:
      - Custom Templates
      summary: Get template usage statistics
      description: Retrieve statistics about template usage
      operationId: getTemplateUsageStats
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
  /api/v1/templates/custom/search:
    get:
      tags:
      - Custom Templates
      summary: Search templates
      description: Search templates by name pattern
      operationId: searchTemplates
      parameters:
      - name: pattern
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkspaceTemplateResponse'
  /api/v1/templates/custom/health:
    get:
      tags:
      - Custom Templates
      summary: Custom template health check
      description: Health check for custom template management
      operationId: healthCheck_1
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
  /api/v1/tasks/workspace/{workspaceId}:
    get:
      tags:
      - Task
      summary: Get tasks by workspace ID
      description: Retrieves all tasks for a specific workspace
      operationId: getTasksByWorkspaceId
      parameters:
      - name: workspaceId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaskResponse'
  /api/v1/tasks/tag/{tag}:
    get:
      tags:
      - Task
      summary: Get tasks by tag
      description: Retrieves all tasks with a specific tag
      operationId: getTasksByTag
      parameters:
      - name: tag
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaskResponse'
  /api/v1/tasks/status/{status}:
    get:
      tags:
      - Task
      summary: Get tasks by status
      description: Retrieves all tasks with a specific status
      operationId: getTasksByStatus
      parameters:
      - name: status
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaskResponse'
  /api/v1/tasks/session/{sessionId}:
    get:
      tags:
      - Task
      summary: Get tasks by session ID
      description: Retrieves all tasks for a specific session
      operationId: getTasksBySessionId
      parameters:
      - name: sessionId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaskResponse'
  /api/v1/tasks/session/{sessionId}/pending:
    get:
      tags:
      - Task
      summary: Get pending tasks for session
      description: Retrieves pending tasks for a specific session
      operationId: getPendingTasksForSession
      parameters:
      - name: sessionId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaskResponse'
  /api/v1/tasks/search:
    get:
      tags:
      - Task
      summary: Search tasks by name
      description: Searches tasks by name pattern
      operationId: searchTasksByName
      parameters:
      - name: name
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaskResponse'
  /api/v1/sessions/{id}/workspace:
    get:
      tags:
      - Session
      summary: Get session workspace
      description: Gets the single workspace for a specific session
      operationId: getSessionWorkspace
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WorkspaceResponse'
  /api/v1/sessions/{id}/detail:
    get:
      tags:
      - Session Detail
      summary: Get session detail
      description: Retrieves detailed information about a session including workspaces
      operationId: getSessionDetail
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SessionDetailResponse'
  /api/v1/sessions/tag/{tag}:
    get:
      tags:
      - Session
      summary: Get sessions by tag
      description: Retrieves all sessions with a specific tag
      operationId: getSessionsByTag
      parameters:
      - name: tag
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SessionResponse'
  /api/v1/sessions/status/{status}:
    get:
      tags:
      - Session
      summary: Get sessions by status
      description: Retrieves all sessions with a specific status
      operationId: getSessionsByStatus
      parameters:
      - name: status
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SessionResponse'
  /api/v1/sessions/search:
    get:
      tags:
      - Session
      summary: Search sessions by name
      description: Searches sessions by name pattern
      operationId: searchSessionsByName
      parameters:
      - name: name
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SessionResponse'
  /api/v1/sessions/realtime/stats:
    get:
      tags:
      - session-realtime-controller
      operationId: getConnectionStats
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
  /api/v1/sessions/realtime/health:
    get:
      tags:
      - session-realtime-controller
      operationId: getRealtimeHealth
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
  /api/v1/sessions/realtime/events:
    get:
      tags:
      - session-realtime-controller
      operationId: streamSessionEvents
      parameters:
      - name: sessionId
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            text/event-stream:
              schema:
                $ref: '#/components/schemas/SseEmitter'
  /api/v1/sessions/realtime/config:
    get:
      tags:
      - session-realtime-controller
      operationId: getRealtimeConfig
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
  /api/v1/sessions/by-workspace/{workspaceId}:
    get:
      tags:
      - Session
      summary: Get session by workspace ID
      description: Retrieves a session by its associated workspace ID
      operationId: getSessionByWorkspaceId
      parameters:
      - name: workspaceId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SessionResponse'
  /api/v1/repositories/templates:
    get:
      tags:
      - Repository Management
      summary: インストールスクリプトテンプレート一覧
      description: 利用可能なインストールスクリプトテンプレートの一覧を取得します
      operationId: getInstallScriptTemplates
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InstallScriptTemplateResponse'
  /api/v1/repositories/tags:
    get:
      tags:
      - Repository Management
      summary: 利用可能なタグ一覧
      description: リポジトリで使用されている全てのタグを取得します
      operationId: getAvailableTags
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
  /api/v1/repositories/stats:
    get:
      tags:
      - Repository Management
      summary: リポジトリ統計情報
      description: リポジトリの統計情報を取得します
      operationId: getRepositoryStats
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
  /api/v1/integration/tasks/{taskId}/execution-info:
    get:
      tags:
      - Workspace-Task Integration
      summary: Get task execution info
      description: Retrieves detailed execution information for a specific task
      operationId: getTaskExecutionInfo
      parameters:
      - name: taskId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
  /api/v1/integration/stats/execution:
    get:
      tags:
      - Workspace-Task Integration
      summary: Get task execution statistics
      description: Retrieves overall statistics about task execution
      operationId: getTaskExecutionStats
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
  /api/v1/integration/health:
    get:
      tags:
      - Workspace-Task Integration
      summary: Integration health check
      description: Health check for workspace-task integration services
      operationId: healthCheck_2
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
  /api/v1/health:
    get:
      tags:
      - health-controller
      operationId: health
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
  /api/v1/documents/search:
    get:
      tags:
      - Document
      summary: Search documents
      description: Searches for documents based on query parameters
      operationId: searchDocuments
      parameters:
      - name: title
        in: query
        required: false
        schema:
          type: string
      - name: tag
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document'
  /api/v1/coder/templates:
    get:
      tags:
      - coder-controller
      operationId: getCoderTemplates
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CoderTemplateResponse'
  /api/v1/coder/templates/{id}:
    get:
      tags:
      - coder-controller
      operationId: getCoderTemplate
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CoderTemplateResponse'
  /api/v1/agents:
    get:
      tags:
      - agent-controller
      operationId: getAllAgents
      parameters:
      - name: status
        in: query
        required: false
        schema:
          type: string
      - name: workspaceId
        in: query
        required: false
        schema:
          type: string
      - name: sessionId
        in: query
        required: false
        schema:
          type: string
      - name: capability
        in: query
        required: false
        schema:
          type: string
      - name: tag
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AgentResponse'
  /api/v1/agents/{id}/logs:
    get:
      tags:
      - agent-controller
      operationId: getAgentLogs
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: lines
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 100
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
  /api/v1/agents/statistics:
    get:
      tags:
      - agent-controller
      operationId: getAgentStatistics
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AgentStatisticsSummaryResponse'
  /api/v1/agents/online:
    get:
      tags:
      - agent-controller
      operationId: getOnlineAgents
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AgentResponse'
  /api/v1/agents/available:
    get:
      tags:
      - agent-controller
      operationId: getAvailableAgents
      parameters:
      - name: capabilities
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
      - name: tags
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AgentResponse'
  /api/v1/sessions/{id}/tags/{tag}:
    delete:
      tags:
      - Session
      summary: Remove tag from session
      description: Removes a tag from a specific session
      operationId: removeTagFromSession
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: tag
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SessionResponse'
components:
  schemas:
    WorkspaceBuildInfoResponse:
      required:
      - buildId
      - buildNumber
      - buildStatus
      type: object
      properties:
        buildId:
          type: string
        buildNumber:
          type: integer
          format: int32
        buildStatus:
          type: string
          enum:
          - PENDING
          - RUNNING
          - SUCCEEDED
          - FAILED
          - CANCELED
        buildReason:
          type: string
        buildStartedAt:
          type: string
          format: date-time
        buildCompletedAt:
          type: string
          format: date-time
        buildLog:
          type: string
    WorkspaceResourceInfoResponse:
      type: object
      properties:
        cpuCores:
          type: integer
          format: int32
        memoryMb:
          type: integer
          format: int64
        diskGb:
          type: integer
          format: int64
        namespace:
          type: string
        volumeClaimName:
          type: string
        containerName:
          type: string
        serviceName:
          type: string
        ingressUrl:
          type: string
    WorkspaceResponse:
      required:
      - automaticUpdates
      - createdAt
      - id
      - metadata
      - name
      - richParameterValues
      - sessionId
      - status
      - updatedAt
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        sessionId:
          type: string
        templateId:
          type: string
        templateVersionId:
          type: string
        status:
          type: string
          enum:
          - PENDING
          - STARTING
          - RUNNING
          - STOPPING
          - STOPPED
          - DELETING
          - DELETED
          - FAILED
          - CANCELED
        autoStartSchedule:
          type: string
        ttlMs:
          type: integer
          format: int64
        automaticUpdates:
          type: boolean
        richParameterValues:
          type: object
          additionalProperties:
            type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        startedAt:
          type: string
          format: date-time
        stoppedAt:
          type: string
          format: date-time
        lastUsedAt:
          type: string
          format: date-time
        deletedAt:
          type: string
          format: date-time
        buildInfo:
          $ref: '#/components/schemas/WorkspaceBuildInfoResponse'
        resourceInfo:
          $ref: '#/components/schemas/WorkspaceResourceInfoResponse'
        metadata:
          type: object
          additionalProperties:
            type: string
    UpdateWorkspaceTemplateRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        version:
          type: string
        icon:
          type: string
        isDefault:
          type: boolean
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/WorkspaceTemplateParameterRequest'
    WorkspaceTemplateParameterRequest:
      required:
      - displayName
      - mutable
      - name
      - options
      - required
      - type
      type: object
      properties:
        name:
          type: string
        displayName:
          type: string
        description:
          type: string
        type:
          type: string
          enum:
          - STRING
          - NUMBER
          - BOOLEAN
          - LIST
        required:
          type: boolean
        defaultValue:
          type: string
        options:
          type: array
          items:
            type: string
        validationRegex:
          type: string
        mutable:
          type: boolean
    WorkspaceTemplateParameterResponse:
      required:
      - displayName
      - mutable
      - name
      - options
      - required
      - type
      type: object
      properties:
        name:
          type: string
        displayName:
          type: string
        description:
          type: string
        type:
          type: string
          enum:
          - STRING
          - NUMBER
          - BOOLEAN
          - LIST
        required:
          type: boolean
        defaultValue:
          type: string
        options:
          type: array
          items:
            type: string
        validationRegex:
          type: string
        mutable:
          type: boolean
    WorkspaceTemplateResponse:
      required:
      - createdAt
      - id
      - isDefault
      - name
      - parameters
      - updatedAt
      - version
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        version:
          type: string
        icon:
          type: string
        isDefault:
          type: boolean
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/WorkspaceTemplateParameterResponse'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    UpdateTemplateRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        content:
          type: string
    Template:
      required:
      - content
      - description
      - id
      - lastModified
      - name
      - path
      - status
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        path:
          type: string
        content:
          type: string
        lastModified:
          type: string
        status:
          type: string
    CreateWorkspaceTemplateParameterRequest:
      required:
      - displayName
      - mutable
      - name
      - options
      - required
      - type
      type: object
      properties:
        name:
          type: string
        displayName:
          type: string
        description:
          type: string
        type:
          type: string
        required:
          type: boolean
        defaultValue:
          type: string
        options:
          type: array
          items:
            type: string
        validationRegex:
          type: string
        mutable:
          type: boolean
    UpdateCustomTemplateRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        icon:
          type: string
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/CreateWorkspaceTemplateParameterRequest'
    UpdateTemplateContentRequest:
      required:
      - content
      type: object
      properties:
        content:
          type: string
    UpdateTemplateContentResponse:
      required:
      - success
      type: object
      properties:
        success:
          type: boolean
    UpdateTaskRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        script:
          type: string
        status:
          type: string
        priority:
          type: integer
          format: int32
        parameters:
          type: object
          additionalProperties:
            type: string
        tags:
          type: array
          items:
            type: string
        metadata:
          type: object
          additionalProperties:
            type: string
        maxRetries:
          type: integer
          format: int32
        dependsOn:
          type: array
          items:
            type: string
    TaskResponse:
      required:
      - artifacts
      - createdAt
      - dependsOn
      - id
      - logs
      - maxRetries
      - metadata
      - name
      - parameters
      - priority
      - retryCount
      - script
      - sessionId
      - status
      - tags
      - updatedAt
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        script:
          type: string
        status:
          type: string
        sessionId:
          type: string
        workspaceId:
          type: string
        priority:
          type: integer
          format: int32
        parameters:
          type: object
          additionalProperties:
            type: string
        tags:
          type: array
          items:
            type: string
        metadata:
          type: object
          additionalProperties:
            type: string
        startedAt:
          type: string
          format: date-time
        completedAt:
          type: string
          format: date-time
        errorMessage:
          type: string
        errorCode:
          type: string
        retryCount:
          type: integer
          format: int32
        maxRetries:
          type: integer
          format: int32
        parentTaskId:
          type: string
        dependsOn:
          type: array
          items:
            type: string
        artifacts:
          type: array
          items:
            type: string
        logs:
          type: array
          items:
            type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    SessionTemplateConfigRequest:
      required:
      - parameters
      - preferredKeywords
      - repositoryRef
      - templatePath
      type: object
      properties:
        templateId:
          type: string
        templateName:
          type: string
        repositoryUrl:
          type: string
        repositoryRef:
          type: string
        templatePath:
          type: string
        preferredKeywords:
          type: array
          items:
            type: string
        parameters:
          type: object
          additionalProperties:
            type: string
    UpdateSessionRequest:
      required:
      - name
      - tags
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        tags:
          type: array
          items:
            type: string
        templateConfig:
          $ref: '#/components/schemas/SessionTemplateConfigRequest'
    SessionResponse:
      required:
      - createdAt
      - id
      - name
      - status
      - tags
      - updatedAt
      - workspaces
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        status:
          type: string
        tags:
          type: array
          items:
            type: string
        templateConfig:
          $ref: '#/components/schemas/SessionTemplateConfigResponse'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        workspaces:
          type: array
          items:
            $ref: '#/components/schemas/SessionWorkspaceInfo'
    SessionTemplateConfigResponse:
      required:
      - parameters
      - preferredKeywords
      - repositoryRef
      - templatePath
      type: object
      properties:
        templateId:
          type: string
        templateName:
          type: string
        repositoryUrl:
          type: string
        repositoryRef:
          type: string
        templatePath:
          type: string
        preferredKeywords:
          type: array
          items:
            type: string
        parameters:
          type: object
          additionalProperties:
            type: string
    SessionWorkspaceInfo:
      required:
      - createdAt
      - id
      - name
      - status
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        status:
          type: string
        workspaceUrl:
          type: string
        createdAt:
          type: string
          format: date-time
        lastUsedAt:
          type: string
          format: date-time
    UpdateRepositoryRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        url:
          type: string
        branch:
          type: string
        authType:
          type: string
        authConfig:
          type: object
          additionalProperties:
            type: string
        tags:
          type: array
          items:
            type: string
        installScript:
          type: string
        isActive:
          type: boolean
    RepositoryResponse:
      required:
      - authType
      - branch
      - createdAt
      - hasInstallScript
      - id
      - isActive
      - name
      - tags
      - updatedAt
      - url
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        url:
          type: string
        branch:
          type: string
        authType:
          type: string
        isActive:
          type: boolean
        tags:
          type: array
          items:
            type: string
        hasInstallScript:
          type: boolean
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    Document:
      required:
      - content
      - createdAt
      - tags
      - title
      - updatedAt
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        content:
          type: string
        tags:
          type: array
          items:
            type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    AgentConfigurationRequest:
      required:
      - customProperties
      - enableHealthCheck
      - enableLogStreaming
      - heartbeatIntervalSeconds
      - logLevel
      - maxConcurrentTasks
      - retryAttempts
      - timeoutSeconds
      type: object
      properties:
        maxConcurrentTasks:
          type: integer
          format: int32
        heartbeatIntervalSeconds:
          type: integer
          format: int32
        logLevel:
          type: string
        timeoutSeconds:
          type: integer
          format: int32
        retryAttempts:
          type: integer
          format: int32
        enableHealthCheck:
          type: boolean
        enableLogStreaming:
          type: boolean
        customProperties:
          type: object
          additionalProperties:
            type: string
    UpdateAgentRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        tags:
          uniqueItems: true
          type: array
          items:
            type: string
        metadata:
          type: object
          additionalProperties:
            type: object
        configuration:
          $ref: '#/components/schemas/AgentConfigurationRequest'
    AgentConfigurationResponse:
      required:
      - customProperties
      - enableHealthCheck
      - enableLogStreaming
      - heartbeatIntervalSeconds
      - logLevel
      - maxConcurrentTasks
      - retryAttempts
      - timeoutSeconds
      type: object
      properties:
        maxConcurrentTasks:
          type: integer
          format: int32
        heartbeatIntervalSeconds:
          type: integer
          format: int32
        logLevel:
          type: string
        timeoutSeconds:
          type: integer
          format: int32
        retryAttempts:
          type: integer
          format: int32
        enableHealthCheck:
          type: boolean
        enableLogStreaming:
          type: boolean
        customProperties:
          type: object
          additionalProperties:
            type: string
    AgentResourceUsageResponse:
      required:
      - cpuUsagePercent
      - diskUsagePercent
      - memoryUsagePercent
      - networkBytesIn
      - networkBytesOut
      type: object
      properties:
        cpuUsagePercent:
          type: number
          format: double
        memoryUsagePercent:
          type: number
          format: double
        diskUsagePercent:
          type: number
          format: double
        networkBytesIn:
          type: integer
          format: int64
        networkBytesOut:
          type: integer
          format: int64
    AgentResponse:
      required:
      - capabilities
      - configuration
      - hostname
      - id
      - ipAddress
      - metadata
      - name
      - port
      - registeredAt
      - statistics
      - status
      - tags
      - updatedAt
      - version
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        hostname:
          type: string
        ipAddress:
          type: string
        port:
          type: integer
          format: int32
        version:
          type: string
        status:
          type: string
        capabilities:
          uniqueItems: true
          type: array
          items:
            type: string
        workspaceId:
          type: string
        sessionId:
          type: string
        currentTaskId:
          type: string
        lastHeartbeat:
          type: string
          format: date-time
        registeredAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        tags:
          uniqueItems: true
          type: array
          items:
            type: string
        metadata:
          type: object
          additionalProperties:
            type: object
        configuration:
          $ref: '#/components/schemas/AgentConfigurationResponse'
        statistics:
          $ref: '#/components/schemas/AgentStatisticsResponse'
    AgentStatisticsResponse:
      required:
      - averageTaskDurationSeconds
      - failedTasks
      - resourceUsage
      - successfulTasks
      - totalTasksExecuted
      - uptime
      type: object
      properties:
        totalTasksExecuted:
          type: integer
          format: int64
        successfulTasks:
          type: integer
          format: int64
        failedTasks:
          type: integer
          format: int64
        averageTaskDurationSeconds:
          type: number
          format: double
        uptime:
          type: integer
          format: int64
        lastError:
          type: string
        lastErrorTime:
          type: string
          format: date-time
        resourceUsage:
          $ref: '#/components/schemas/AgentResourceUsageResponse'
    UpdateAgentStatusRequest:
      required:
      - agentStatus
      - status
      type: object
      properties:
        status:
          type: string
        agentStatus:
          type: string
          enum:
          - OFFLINE
          - ONLINE
          - BUSY
          - ERROR
          - MAINTENANCE
    CreateWorkspaceRequest:
      required:
      - automaticUpdates
      - name
      - richParameterValues
      - sessionId
      type: object
      properties:
        name:
          type: string
        sessionId:
          type: string
        templateId:
          type: string
        templateVersionId:
          type: string
        autoStartSchedule:
          type: string
        ttlMs:
          type: integer
          format: int64
        automaticUpdates:
          type: boolean
        richParameterValues:
          type: object
          additionalProperties:
            type: string
    CreateWorkspaceTemplateRequest:
      required:
      - isDefault
      - name
      - parameters
      - version
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        version:
          type: string
        icon:
          type: string
        isDefault:
          type: boolean
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/WorkspaceTemplateParameterRequest'
    CreateTemplateRequest:
      required:
      - content
      - description
      - name
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        content:
          type: string
    ValidateTemplateRequest:
      required:
      - content
      type: object
      properties:
        content:
          type: string
    ValidateTemplateResponse:
      required:
      - errors
      - isValid
      - warnings
      type: object
      properties:
        isValid:
          type: boolean
        errors:
          type: array
          items:
            type: string
        warnings:
          type: array
          items:
            type: string
    ValidateParameterRequest:
      required:
      - parameterName
      - templateId
      - value
      type: object
      properties:
        templateId:
          type: string
        parameterName:
          type: string
        value:
          type: string
    CreateCustomTemplateRequest:
      required:
      - name
      - parameters
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        icon:
          type: string
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/CreateWorkspaceTemplateParameterRequest'
        baseTemplateId:
          type: string
    CloneTemplateRequest:
      required:
      - newName
      type: object
      properties:
        newName:
          type: string
        newDescription:
          type: string
    CreateTaskRequest:
      required:
      - dependsOn
      - maxRetries
      - metadata
      - name
      - parameters
      - priority
      - script
      - sessionId
      - tags
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        script:
          type: string
        sessionId:
          type: string
        workspaceId:
          type: string
        priority:
          type: integer
          format: int32
        parameters:
          type: object
          additionalProperties:
            type: string
        tags:
          type: array
          items:
            type: string
        metadata:
          type: object
          additionalProperties:
            type: string
        maxRetries:
          type: integer
          format: int32
        parentTaskId:
          type: string
        dependsOn:
          type: array
          items:
            type: string
    CreateSessionRequest:
      required:
      - name
      - tags
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        tags:
          type: array
          items:
            type: string
        templateConfig:
          $ref: '#/components/schemas/SessionTemplateConfigRequest'
    CreateRepositoryRequest:
      required:
      - authType
      - branch
      - name
      - tags
      - url
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        url:
          type: string
        branch:
          type: string
        authType:
          type: string
        authConfig:
          type: object
          additionalProperties:
            type: string
        tags:
          type: array
          items:
            type: string
        installScript:
          type: string
    RepositoryOperationResponse:
      required:
      - message
      - success
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
        details:
          type: object
          additionalProperties:
            type: object
    CloneRepositoryRequest:
      required:
      - targetPath
      type: object
      properties:
        targetPath:
          type: string
    GenerateScriptRequest:
      required:
      - templateName
      - variables
      type: object
      properties:
        templateName:
          type: string
        variables:
          type: object
          additionalProperties:
            type: string
    RefreshTokenRequest:
      required:
      - refreshToken
      type: object
      properties:
        refreshToken:
          type: string
    TokenResponse:
      required:
      - accessToken
      - refreshToken
      - tokenType
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
        tokenType:
          type: string
    LoginRequest:
      required:
      - password
      - username
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    AgentHeartbeatRequest:
      required:
      - agentId
      - resourceUsage
      - statistics
      - status
      type: object
      properties:
        agentId:
          type: string
        status:
          type: string
        currentTaskId:
          type: string
        statistics:
          $ref: '#/components/schemas/AgentStatisticsRequest'
        resourceUsage:
          $ref: '#/components/schemas/AgentResourceUsageRequest'
    AgentResourceUsageRequest:
      required:
      - cpuUsagePercent
      - diskUsagePercent
      - memoryUsagePercent
      - networkBytesIn
      - networkBytesOut
      type: object
      properties:
        cpuUsagePercent:
          type: number
          format: double
        memoryUsagePercent:
          type: number
          format: double
        diskUsagePercent:
          type: number
          format: double
        networkBytesIn:
          type: integer
          format: int64
        networkBytesOut:
          type: integer
          format: int64
    AgentStatisticsRequest:
      required:
      - averageTaskDurationSeconds
      - failedTasks
      - resourceUsage
      - successfulTasks
      - totalTasksExecuted
      - uptime
      type: object
      properties:
        totalTasksExecuted:
          type: integer
          format: int64
        successfulTasks:
          type: integer
          format: int64
        failedTasks:
          type: integer
          format: int64
        averageTaskDurationSeconds:
          type: number
          format: double
        uptime:
          type: integer
          format: int64
        lastError:
          type: string
        lastErrorTime:
          type: string
          format: date-time
        resourceUsage:
          $ref: '#/components/schemas/AgentResourceUsageRequest'
    AgentHealthCheckResponse:
      required:
      - agentId
      - checks
      - message
      - responseTimeMs
      - status
      - timestamp
      type: object
      properties:
        agentId:
          type: string
        status:
          type: string
        message:
          type: string
        responseTimeMs:
          type: integer
          format: int64
        checks:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/HealthCheckDetailResponse'
        timestamp:
          type: string
          format: date-time
    HealthCheckDetailResponse:
      required:
      - duration
      - message
      - name
      - status
      type: object
      properties:
        name:
          type: string
        status:
          type: string
        message:
          type: string
        duration:
          type: integer
          format: int64
    ExecuteAgentCommandRequest:
      required:
      - args
      - command
      type: object
      properties:
        command:
          type: string
        args:
          type: array
          items:
            type: string
    AgentCommandResultResponse:
      required:
      - agentId
      - args
      - command
      - duration
      - exitCode
      - stderr
      - stdout
      - timestamp
      type: object
      properties:
        agentId:
          type: string
        command:
          type: string
        args:
          type: array
          items:
            type: string
        exitCode:
          type: integer
          format: int32
        stdout:
          type: string
        stderr:
          type: string
        duration:
          type: integer
          format: int64
        timestamp:
          type: string
          format: date-time
    RegisterAgentRequest:
      required:
      - capabilities
      - configuration
      - hostname
      - ipAddress
      - metadata
      - name
      - port
      - tags
      - version
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        hostname:
          type: string
        ipAddress:
          type: string
        port:
          type: integer
          format: int32
        version:
          type: string
        capabilities:
          uniqueItems: true
          type: array
          items:
            type: string
        tags:
          uniqueItems: true
          type: array
          items:
            type: string
        metadata:
          type: object
          additionalProperties:
            type: object
        configuration:
          $ref: '#/components/schemas/AgentConfigurationRequest'
    SseEmitter:
      type: object
      properties:
        timeout:
          type: integer
          format: int64
    TemplateContentResponse:
      required:
      - content
      type: object
      properties:
        content:
          type: string
    SessionDetailResponse:
      required:
      - createdAt
      - id
      - name
      - status
      - tags
      - updatedAt
      - workspaceStats
      - workspaces
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        status:
          type: string
        tags:
          type: array
          items:
            type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        workspaces:
          type: array
          items:
            $ref: '#/components/schemas/SessionWorkspaceDetail'
        workspaceStats:
          $ref: '#/components/schemas/SessionWorkspaceStats'
    SessionWorkspaceDetail:
      required:
      - actions
      - automaticUpdates
      - createdAt
      - id
      - name
      - status
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        status:
          type: string
        workspaceUrl:
          type: string
        coderWorkspaceUrl:
          type: string
        templateId:
          type: string
        automaticUpdates:
          type: boolean
        ttlMs:
          type: integer
          format: int64
        createdAt:
          type: string
          format: date-time
        startedAt:
          type: string
          format: date-time
        lastUsedAt:
          type: string
          format: date-time
        buildInfo:
          $ref: '#/components/schemas/WorkspaceBuildDetail'
        actions:
          type: array
          items:
            type: string
    SessionWorkspaceStats:
      required:
      - deleting
      - failed
      - pending
      - running
      - stopped
      - total
      type: object
      properties:
        total:
          type: integer
          format: int32
        running:
          type: integer
          format: int32
        stopped:
          type: integer
          format: int32
        pending:
          type: integer
          format: int32
        failed:
          type: integer
          format: int32
        deleting:
          type: integer
          format: int32
    WorkspaceBuildDetail:
      required:
      - buildId
      - buildNumber
      - buildStatus
      type: object
      properties:
        buildId:
          type: string
        buildNumber:
          type: integer
          format: int32
        buildStatus:
          type: string
        buildReason:
          type: string
        buildStartedAt:
          type: string
          format: date-time
        buildCompletedAt:
          type: string
          format: date-time
    RepositoryDetailResponse:
      required:
      - authConfigPresent
      - authType
      - branch
      - createdAt
      - id
      - isActive
      - name
      - tags
      - updatedAt
      - url
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        url:
          type: string
        branch:
          type: string
        authType:
          type: string
        authConfigPresent:
          type: boolean
        isActive:
          type: boolean
        tags:
          type: array
          items:
            type: string
        installScript:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    InstallScriptTemplateResponse:
      required:
      - description
      - name
      - template
      - variables
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        template:
          type: string
        variables:
          type: array
          items:
            type: string
    CoderTemplateResponse:
      required:
      - active_version_id
      - created_by_name
      - default_ttl_ms
      - deprecated
      - description
      - display_name
      - icon
      - id
      - max_ttl_ms
      - min_autostart_interval_ms
      - name
      - organization_id
      - provisioner
      - updated_at
      - workspace_count
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        display_name:
          type: string
        description:
          type: string
        icon:
          type: string
        default_ttl_ms:
          type: integer
          format: int64
        max_ttl_ms:
          type: integer
          format: int64
        min_autostart_interval_ms:
          type: integer
          format: int64
        created_by_name:
          type: string
        updated_at:
          type: string
          format: date-time
        organization_id:
          type: string
        provisioner:
          type: string
        active_version_id:
          type: string
        workspace_count:
          type: integer
          format: int32
        deprecated:
          type: boolean
    AgentStatisticsSummaryResponse:
      required:
      - averageResponseTime
      - busyAgents
      - errorAgents
      - failedTasks
      - offlineAgents
      - onlineAgents
      - successfulTasks
      - totalAgents
      - totalTasksExecuted
      type: object
      properties:
        totalAgents:
          type: integer
          format: int64
        onlineAgents:
          type: integer
          format: int64
        busyAgents:
          type: integer
          format: int64
        offlineAgents:
          type: integer
          format: int64
        errorAgents:
          type: integer
          format: int64
        totalTasksExecuted:
          type: integer
          format: int64
        successfulTasks:
          type: integer
          format: int64
        failedTasks:
          type: integer
          format: int64
        averageResponseTime:
          type: number
          format: double
